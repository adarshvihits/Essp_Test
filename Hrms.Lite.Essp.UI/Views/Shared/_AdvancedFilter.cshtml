
@model Hrms.Lite.Essp.Shared.General.Filter
<script src="~/scripts/filter.js"></script>


@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "display-flex", @id = "AdvancedFilter" }))
{


    <div id="filterForm" class="slider-forms basicFilter">
        <div class="slider-inner-style">
            <div class="slider-form-close"><i class="ki ki-close icon-xs text-muted"></i></div>
            <div class="filter-slider-item-box">
                <h4>Basic Filter</h4>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Designation</label>

                            @Html.HiddenFor(m => m.Tabindex)
                            @Html.HiddenFor(m => m.SearchId)
                            @Html.HiddenFor(m => m.Basic_Filter.Designation.Name)
                            @Html.DropDownListFor(m => m.Basic_Filter.Designation.Code, (SelectList)ViewBag.Dsg, "All", new { @class = "form-control form-control-sm reset", onchange = "onDesignationChange()" })



                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Department</label>
                            @Html.HiddenFor(m => m.Basic_Filter.Department.Name)

                            @Html.DropDownListFor(m => m.Basic_Filter.Department.Code, (SelectList)ViewBag.Dept, "All", new { @class = "form-control form-control-sm reset", onchange = "onDepartmentChange()" })

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Location</label>

                            @Html.HiddenFor(m => m.Basic_Filter.Location.Name)

                            @Html.DropDownListFor(m => m.Basic_Filter.Location.Code, (SelectList)ViewBag.Loc, "All", new { @class = "form-control form-control-sm reset", onchange = "onLocationChange()" })

                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Category</label>

                            @Html.HiddenFor(m => m.Basic_Filter.Category.Name)

                            @Html.DropDownListFor(m => m.Basic_Filter.Category.Code, (SelectList)ViewBag.Cat, "All", new { @class = "form-control form-control-sm reset", onchange = "onCategoryChange()" })

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Grade</label>
                            @Html.HiddenFor(m => m.Basic_Filter.Grade.Name)

                            @Html.DropDownListFor(m => m.Basic_Filter.Grade.Code, (SelectList)ViewBag.Grd, "All", new { @class = "form-control form-control-sm reset", onchange = "onGradeChange()" })

                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Payroll Group</label>
                            @Html.HiddenFor(m => m.Basic_Filter.PayrollGroup.Name)

                            @Html.DropDownListFor(m => m.Basic_Filter.PayrollGroup.Code, (SelectList)ViewBag.PayrollGrp, "All", new { @class = "form-control form-control-sm reset", onchange = "onPayRollGroup()" })

                        </div>
                    </div>
                </div>
            </div>
            <div class="filter-slider-item-box">
                <h4>Optional Filter</h4>
                <div class="row">


                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Division</label>
                            @Html.HiddenFor(m => m.Optional_Filter.Division.Name)

                            @Html.DropDownListFor(m => m.Optional_Filter.Division.Code, (SelectList)ViewBag.division, "All", new { @class = "form-control form-control-sm reset", onchange = "OnDivisionchange()" })



                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Section</label>
                            @Html.HiddenFor(m => m.Optional_Filter.Section.Name)
                            @Html.DropDownListFor(m => m.Optional_Filter.Section.Code, (SelectList)ViewBag.section, "All", new { @class = "form-control form-control-sm reset", onchange = "onSectionChange()" })

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Employment Type</label>
                            @Html.HiddenFor(m => m.Optional_Filter.EmploymentType.Name)
                            @Html.DropDownListFor(m => m.Optional_Filter.EmploymentType.Code, (SelectList)ViewBag.EmploymentType, "All", new { @class = "form-control form-control-sm reset", onchange = "OnEmploymentTypeChange()" })

                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Work Location</label>
                            @Html.HiddenFor(m => m.Optional_Filter.WorkLocation.Name)
                            @Html.DropDownListFor(m => m.Optional_Filter.WorkLocation.Code, (SelectList)ViewBag.WorkLocation, "All", new { @class = "form-control form-control-sm reset", onchange = "OnWorkLocationChange()" })

                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Wage Grade</label>
                            @Html.HiddenFor(m => m.Optional_Filter.WageGradeMaster.Name)
                            @Html.DropDownListFor(m => m.Optional_Filter.WageGradeMaster.Code, (SelectList)ViewBag.WageGrade, "All", new { @class = "form-control form-control-sm reset", onchange = "onWageGradeChange()" })

                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Employment Status</label>
                            @Html.HiddenFor(m => m.Optional_Filter.EmploymentStatus.Name)
                            @Html.DropDownListFor(m => m.Optional_Filter.EmploymentStatus.Code, (SelectList)ViewBag.EmploymentStatus, new { @class = "form-control form-control-sm reset", onchange = "OnEmploymentStatusChange()" })

                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Gender</label>
                            @Html.HiddenFor(m => m.Optional_Filter.Gender.Name)
                            @Html.DropDownListFor(m => m.Optional_Filter.Gender.Code, (SelectList)ViewBag.Gen, "All", new { @class = "form-control form-control-sm reset", onchange = "OnGenderChange()" })

                        </div>
                    </div>


                </div>

            </div>

            <div class="filter-slider-item-box">
                <h4>Advance Filter</h4>
                <div class="row">
                    <div class="col-md-12">
                        <div class="radio-inline">
                            <label style="width: 40px;" class="radio-inline-label mt-1">Age</label>
                            <label class="radio radio-outline radio-outline-2x radio-primary mt-1">
                                @Html.RadioButtonFor(m => m.Advance_Filter.AgeAboveOrBelow, "Above")
                                <span></span>Above
                            </label>
                           
                            <label class="radio radio-outline radio-outline-2x radio-primary mt-1">
                                @Html.RadioButtonFor(m => m.Advance_Filter.AgeAboveOrBelow, "Below",new { @selected = "true"})
                                <span></span>Below
                            </label>
                            <label style="width: 50px;">
                                @*<input type="text" class="form-control form-control-sm">*@
                                @Html.TextBoxFor(m => m.Advance_Filter.Age,new { @class= "form-control form-control-sm" })
                            </label>

                        </div>
                    </div>

                </div>
                <div class="row mt-5">
                    <div class="col-md-12">
                        <div class="radio-inline">
                            <label style="width: 40px;" class="radio-inline-label mt-1">Y/S</label>
                            <label class="radio radio-outline radio-outline-2x radio-primary mt-1">
                                @Html.RadioButtonFor(m => m.Advance_Filter.YSAboveOrBelow,"Above")
                                <span></span>Above
                            </label>
                            <label class="radio radio-outline radio-outline-2x radio-primary mt-1">
                                @Html.RadioButtonFor(m => m.Advance_Filter.YSAboveOrBelow, "Below",new { @checked = "checked"})
                                <span></span>Below
                            </label>
                            <label style="width: 50px;">
                                @*<input type="text" class="form-control form-control-sm">*@
                                @Html.TextBoxFor(m => m.Advance_Filter.YrsOfExperience, new { @class = "form-control form-control-sm" })
                            </label>

                        </div>
                    </div>
                </div>



            </div>

            <div class="filter-slider-item-box">
                <h4>Date Filter</h4>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label>Type</label>
                            @*<select class="form-control form-control-sm " id="exampleSelects">
                                <option>DOJ</option>
                                <option>Retirement</option>
                            </select>*@
                            @Html.HiddenFor(m => m.Date_Filter.DateType.Name)

                            @Html.DropDownListFor(m => m.Date_Filter.DateType.Code, (SelectList)ViewBag.DateType, "All", new { @class = "form-control form-control-sm reset", onchange = "OnDateTypeChangechange()" })
                        </div>
                    </div>
                    <div class="col-md-4 pr-1">
                        <div class="form-group">
                            <label>From</label>
                            <div class="input-group date">
                                @*<input type="text" class="form-control" id="kt_datepicker_2" readonly="readonly" placeholder="Date">*@
                                @Html.TextBoxFor(m => m.Date_Filter.FromDate, "{0:dd-MMM-yyyy}", new { @class = "form-control kt_datepicker_2", @readonly = "readonly", @placeholder = "Date" })
                                <div class="input-group-append">
                                    <span class="input-group-text">
                                        <i class="la la-calendar"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 pl-1">
                        <div class="form-group">
                            <label>To</label>
                            <div class="input-group date">
                                @*<input type="text" class="form-control" id="kt_datepicker_2" readonly="readonly" placeholder="Date">*@
                                @Html.TextBoxFor(m => m.Date_Filter.ToDate, "{0:dd-MMM-yyyy}", new { @class = "form-control kt_datepicker_2", @readonly = "readonly", @placeholder = "Date" })
                                <div class="input-group-append">
                                    <span class="input-group-text">
                                        <i class="la la-calendar"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>




            </div>

            <div class="row card-footer-bottom-fixed border-none">
                <div class="col-md-12 align-right">
                    <button type="button" class="btn btn-secondary  mobile-full-width" onclick="ApplyFilter('reset')">
                        Reset
                    </button>
                    <button type="button" class="btn btn-default  mobile-full-width" onclick="ApplyFilter('apply')">

                        Apply
                    </button>
                </div>

            </div>

        </div>






    </div>
}